extend type Mutation {
  createUser(input: CreateUserInput!): SignInResponse!
  updateUser(id: ID!, input: UpdateUserInput!): User!

  deleteUserById(id: ID!): CRUDResponse!

  ##### Field modification only #####
  # Entry
  resetPassword(email: String!, password: String!): OTPResponse!
  # Basic Info
  updateBasicInfoSelfIntro(id: ID!, selfIntro: String!): CRUDResponse!
  updateBasicInfoUsername(id: ID!, username: String!): CRUDResponse!
  updateBasicInfoVoiceMessage(id: ID!, voiceContentUrl: String!): CRUDResponse!
  resetSettingsPassword(id: ID!, password: String!): CRUDResponse!
  updateSettingsPassword(
    id: ID!
    oldPassword: String!
    newPassword: String!
  ): CRUDResponse!

  ##### With Ent modification #####
  # Basic Info
  createBasicInfoLifePhoto(
    id: ID!
    lifePhotos: [CreateLifePhotoInput!]
  ): CRUDResponse!
  deleteBasicInfoLifePhoto(id: ID!, lifePhotoId: ID!): CRUDResponse!
  # Settings
  createSettingsSocialAccount(
    id: ID!
    socialAccounts: [CreateSocialAccountInput!]
  ): CRUDResponse!
  deleteSettingsSocialAccount(id: ID!, socialAccountId: ID!): CRUDResponse!
}

extend input CreateUserInput {
  createUserCitizen: [CreateCitizenInput!]
  createUserGoal: [CreateGoalInput!]
  createUserEthnicity: [CreateEthnicityInput!]
  createUserSocialAccount: [CreateSocialAccountInput!]
  createUserLifePhoto: [CreateLifePhotoInput!]
}

extend type Query {
  signIn(email: String!, password: String!): SignInResponse!
  socialSignIn(
    email: String!
    platform: SocialAccountPlatform!
  ): SignInResponse!
  checkEmail(email: String!): CheckEmailResponse!
  requestOTP(email: String!): OTPResponse!
  verifyOTP(email: String!, userOTP: String!): OTPResponse!
  getUserById(id: ID!): CRUDResponse!
}

# Need to have a response format
type SignInResponse implements Response {
  status: String!
  statusCode: Int!
  message: String!
  user: User
  token: String
}

type CheckEmailResponse implements Response {
  status: String!
  statusCode: Int!
  message: String!
  exist: Boolean!
}

type CRUDResponse implements Response {
  status: String!
  statusCode: Int!
  message: String!
  user: User
}

type OTPResponse implements Response {
  status: String!
  statusCode: Int!
  message: String!
  valid: Boolean!
}
