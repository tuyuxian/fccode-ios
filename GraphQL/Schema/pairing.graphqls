# This pairingList query is an example of how to get the candidates with the citizenship filter.
extend type Query {
  pairingList(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Users returned from the connection.
    """
    orderBy: UserOrder

    citizenship: String!
  ): UserConnection!
}

extend type Mutation {
  match(sourceUserId: ID!, targetUserId: ID!): MatchResponse!

  like(sourceUserId: ID!, targetUserId: ID!): MatchResponse!
}

type MatchResponse implements Response {
  status: String!
  statusCode: Int!
  message: String!
}
